DBJ2:

uint32_t hash = 5381;
    uint8_t c;
    while ((c = *str++))
        hash = ((hash << 5) + hash) + c; /* hash * 33 + c */
    return hash;

FNV:
int h = 0x12345678;
	h ^= 2166136261UL;
	const uint8_t *data = (const uint8_t *)str;
	for (int i = 0; data[i] != '\0'; i++)
	{
		h ^= data[i];
		h *= 16777619;
	}
	return h;